from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import sqlite3

# SETTING UP DATABASES
conn = sqlite3.connect("users.sqlite")
cur = conn.cursor()

cur.execute('''CREATE TABLE IF NOT EXISTS Users (
    id INTEGER NOT NULL PRIMARY KEY UNIQUE,
    name TEXT,
    lastName TEXT,
    lang
)''')
conn.commit()


# PRE-BUILT INPUTS
hi_eng = ["hi", "hello", "what's up?", "what is up", "what's up", "what is up?", "hello there", "sup", "whassup", "wha sup", "hi there", "hey"]
hi_ukr = ["–ø—Ä–∏–≤—ñ—Ç", "—Ö–µ–π", "–¥–æ–±—Ä–∏–π –¥–µ–Ω—å"]
hi_ru = ["–ø—Ä–∏–≤–µ—Ç", "—Ö–µ–π", "—Ö–∞–π", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å"]

# SETTING UP THE BOT
API_TOKEN = '5108593896:AAFrhYyfeqXLolGlyzOqNgxysSJwfg578-0'
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


# LANGUAGE BUTTONS
english = InlineKeyboardButton(text="üá∫üá∏Englishüá∫üá∏", callback_data="eng")
ukrainian = InlineKeyboardButton(text="üá∫üá¶–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞üá∫üá¶", callback_data="ukr")
ru = InlineKeyboardButton(text="—Ä—É—Å—Å–∫–∏–π", callback_data="ru")
langKeyboard = InlineKeyboardMarkup().add(english).add(ukrainian).add(ru)

# GET BACK BUTTON
gbeng = InlineKeyboardButton(text="‚¨ÖÔ∏èGo Back", callback_data="gback")
gbukr = InlineKeyboardButton(text="‚¨ÖÔ∏è–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è", callback_data="gback")
gbru = InlineKeyboardButton(text="‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="gback")


# START COMMAND
@dp.message_handler(commands=["start"])
async def welcome(message: types.Message):

    try:
        cur.execute('''SELECT lang FROM Users WHERE id = ?''', (message.from_user.id,))
        global lang
        lang = cur.fetchone()[0]
    except:
        await message.answer(f"Hello {message.from_user.first_name}!\nI'm Your English Bro Bot \nWhat's up? \nFor starters /help")

    if lang == "eng":
        await message.answer(f"Hello {message.from_user.first_name}!\nI'm Your English Bro Bot \nWhat's up? \nFor starters type /help")
    elif lang == "ukr":
        await message.answer(f"–ü—Ä–∏–≤—ñ—Ç {message.from_user.first_name}\n–Ø —Ç–≤—ñ–π English Bro Bot \–Ø–∫ —Å—è –º–∞—î—à? \n–î–ª—è –ø–æ—á–∞—Ç–∫—É –≤–≤–µ–¥—ñ—Ç—å /help")
    elif lang == "ru":
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–Ø —Ç–≤–æ–π English Bro Bot \n–ö–∞–∫ –¥–µ–ª–∞? \n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏ /help")


    cur.execute('''INSERT OR IGNORE INTO Users (id,name, lastName)
        VALUES (?,?,?)''',(message.from_user.id, message.from_user.first_name, message.from_user.last_name))
    conn.commit()
# LANG COMMAND
@dp.message_handler(commands=["lang"])
async def lang(message: types.Message):
    await message.answer(responses("lang_command", message.from_user.id), reply_markup=langKeyboard)

# MANAGING LANGUAGES
@dp.callback_query_handler(text=["eng", "ukr", "ru"])
async def changeLang(call: types.CallbackQuery):
    if call.data == "eng":
        await call.message.delete()
        await call.message.answer("Agreed!")
    elif call.data == "ukr":
        await call.message.delete()
        await call.message.answer("–î–æ–º–æ–≤–∏–ª–∏—Å—å!")
    elif call.data == "ru":
        await call.message.delete()
        await call.message.answer("–î–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å!")

    cur.execute('''INSERT OR REPLACE INTO Users (id, name, lastName, lang)
        VALUES (?,?,?,?)''', (call.from_user.id,call.from_user.first_name, call.from_user.last_name, call.data))
    conn.commit()

# HELP COMMAND
@dp.message_handler(commands=["help"])
async def welcome(message: types.Message):
    await message.answer(responses("help_command", message.from_user.id))

# ABOUT COMMAND
@dp.message_handler(commands=["about"])
async def about(message: types.Message):
    await message.answer(responses("about_command",message.from_user.id))

# MANAGING REGULAR MESSAGES
@dp.message_handler()
async def messages(message: types.Message):
    await message.answer(responses(message.text, message.from_user.id))

def responses(command, id):
    cur.execute('''SELECT lang FROM Users WHERE id = ?''',(id,))
    lang = cur.fetchone()[0]
    print(lang)

    if str(command) == "help_command":
        if lang == "eng":
            return "This is the list of all commands: \n/start - Start the bot \n/about - Get to know the teacher better \n/lang - Select your language \n/contact - Contact the teacher \n/help - Get the list of all commands \n------------------- \nIf this is not something you're looking for, please contact the teacher directly: +380 95 177 5440"
        elif lang == "ukr":
            return "–¶–µ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∫–æ–º–∞–Ω–¥: \n/start - –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –±–æ—Ç–∞ \n/about - –î—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ –ø—Ä–æ –≤—á–∏—Ç–µ–ª—è \n/lang - –í–∏–±–µ—Ä—ñ—Ç—å —Å–≤–æ—é –º–æ–≤—É \n/cotact - –ó–≤'—è–∂—ñ—Ç—å—Å—è –∑ –≤–∏–∫–ª–∞–¥–∞—á–µ–º \n/help - –û—Ç—Ä–∏–º–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∫–æ–º–∞–Ω–¥ \n------------------- \n–Ø–∫—â–æ —Ü–µ –Ω–µ —Ç–µ, —â–æ –≤–∏ —à—É–∫–∞—î—Ç–µ, –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –¥–æ –≤–∏–∫–ª–∞–¥–∞—á–∞: +380 95 177 5440"
        elif lang == "ru":
            return "–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥: \n/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ \n/about - –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ —É—á–∏—Ç–µ–ª—è \n/lang - –í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ \n/cotact - –°–≤—è–∑–∞—Ç—å—Å—è —Å —É—á–∏—Ç–µ–ª–µ–º \n/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ \n------------------- \n–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –≤—ã –∏—â–µ—Ç–µ, —Å–≤—è–∂–∏—Ç–µ—Å—å –Ω–∞–ø—Ä—è–º—É—é —Å —É—á–∏—Ç–µ–ª–µ–º: +380 95 177 5440"
        else:
            return "This is the list of all commands: \n/start - Start the bot \n/about - Get to know the teacher better \n/lang - Select your language \n/contact - Contact the teacher \n/help - Get the list of all commands \n------------------- \nIf this is not something you're looking for, please contact the teacher directly: +380 95 177 5440"

    if str(command) == "lang_command":
        return "Select your language"

    if str(command) == "about_command":
        if lang == "eng":
            return '''My name is Viacheslav aka Your English Bro üòé 

I‚Äôve been teaching for more than 3 years. 
I am Business English teacher üë®‚Äçüè´ in Ukrainian-American Concordia university. 
I‚Äôve completed language courses in Reading, UK üá¨üáß, Exeter, UK üá¨üáß and Toronto, Canada üá®üá¶ 
I have BBA and MBA, so I know something about business as well as economics üíµ 
I have worked as a farmer, a manager, a translator, a trainer, had my own company, but my real passion has always been teaching.

My big goal is to teach as many people as I can to make Ukraine an English speaking country'''
        elif lang == "ukr":
            return '''–ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –í‚Äô—è—á–µ—Å–ª–∞–≤, –≤—ñ–Ω –∂–µ ¬´–í–∞—à –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏–π –±—Ä–∞—Ç¬ª üòé

–í–∏–∫–ª–∞–¥–∞—é –±—ñ–ª—å—à–µ 3 —Ä–æ–∫—ñ–≤.
–Ø –≤–∏–∫–ª–∞–¥–∞—á –¥—ñ–ª–æ–≤–æ—ó –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó üë®‚Äçüè´ –≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ-–∞–º–µ—Ä–∏–∫–∞–Ω—Å—å–∫–æ–º—É —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—ñ –ö–æ–Ω–∫–æ—Ä–¥—ñ—è.
–Ø –∑–∞–∫—ñ–Ω—á–∏–≤ –º–æ–≤–Ω—ñ –∫—É—Ä—Å–∏ –≤ –†–µ–¥—ñ–Ω–≥—É, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω—ñ—è üá¨üáß, –ï–∫—Å–µ—Ç–µ—Ä, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω—ñ—è üá¨üáß —Ç–∞ –¢–æ—Ä–æ–Ω—Ç–æ, –ö–∞–Ω–∞–¥–∞ üá®üá¶
–£ –º–µ–Ω–µ —î BBA —Ç–∞ MBA, —Ç–æ–º—É —è –∑–Ω–∞—é –¥–µ—â–æ —è–∫ –ø—Ä–æ –±—ñ–∑–Ω–µ—Å, —Ç–∞–∫ —ñ –ø—Ä–æ –µ–∫–æ–Ω–æ–º—ñ–∫—É üíµ
–Ø –ø—Ä–∞—Ü—é–≤–∞–≤ —Ñ–µ—Ä–º–µ—Ä–æ–º, –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –ø–µ—Ä–µ–∫–ª–∞–¥–∞—á–µ–º, —Ç—Ä–µ–Ω–µ—Ä–æ–º, –º–∞–≤ –≤–ª–∞—Å–Ω—É –∫–æ–º–ø–∞–Ω—ñ—é, –∞–ª–µ –º–æ—î—é —Å–ø—Ä–∞–≤–∂–Ω—å–æ—é –ø—Ä–∏—Å—Ç—Ä–∞—Å—Ç—é –∑–∞–≤–∂–¥–∏ –±—É–ª–æ –Ω–∞–≤—á–∞–Ω–Ω—è.

–ú–æ—è –≤–µ–ª–∏–∫–∞ –º–µ—Ç–∞ ‚Äì –Ω–∞–≤—á–∏—Ç–∏ —è–∫–æ–º–æ–≥–∞ –±—ñ–ª—å—à–µ –ª—é–¥–µ–π –∑—Ä–æ–±–∏—Ç–∏ –£–∫—Ä–∞—ó–Ω—É –∞–Ω–≥–ª–æ–º–æ–≤–Ω–æ—é –∫—Ä–∞—ó–Ω–æ—é'''
        elif lang == "ru":
            return '''–ú–µ–Ω—è –∑–æ–≤—É—Ç –í—è—á–µ—Å–ª–∞–≤, –æ–Ω –∂–µ Your English Bro üòé

–ü—Ä–µ–ø–æ–¥–∞—é –±–æ–ª–µ–µ 3-—Ö –ª–µ—Ç.
–Ø –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –¥–µ–ª–æ–≤–æ–≥–æ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ üë®‚Äçüè´ –≤ —É–∫—Ä–∞–∏–Ω—Å–∫–æ-–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–æ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –ö–æ–Ω–∫–æ—Ä–¥–∏—è.
–Ø –ø—Ä–æ—à–ª–∞ —è–∑—ã–∫–æ–≤—ã–µ –∫—É—Ä—Å—ã –≤ –†–µ–¥–∏–Ω–≥–µ, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è üá¨üáß, –≠–∫—Å–µ—Ç–µ—Ä–µ, –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è üá∑üáß –∏ –¢–æ—Ä–æ–Ω—Ç–æ, –ö–∞–Ω–∞–¥–∞ üá®üá¶
–£ –º–µ–Ω—è –µ—Å—Ç—å BBA –∏ MBA, —Ç–∞–∫ —á—Ç–æ —è –∑–Ω–∞—é –∫–æ–µ-—á—Ç–æ –æ –±–∏–∑–Ω–µ—Å–µ, –∞ —Ç–∞–∫–∂–µ —ç–∫–æ–Ω–æ–º–∏–∫–µ üíµ
–Ø —Ä–∞–±–æ—Ç–∞–ª —Ñ–µ—Ä–º–µ—Ä–æ–º, –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º, –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–æ–º, —Ç—Ä–µ–Ω–µ—Ä–æ–º, –∏–º–µ–ª —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é, –Ω–æ –º–æ–µ–π –Ω–∞—Å—Ç–æ—è—â–µ–π —Å—Ç—Ä–∞—Å—Ç—å—é –≤—Å–µ–≥–¥–∞ –±—ã–ª–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏–µ.

–ú–æ—è –±–æ–ª—å—à–∞—è —Ü–µ–ª—å ‚Äî –Ω–∞—É—á–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ª—é–¥–µ–π —Å–¥–µ–ª–∞—Ç—å –£–∫—Ä–∞–∏–Ω—É –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–æ–π.'''
        else:
            return '''My name is Viacheslav aka Your English Bro üòé 

I‚Äôve been teaching for more than 3 years. 
I am Business English teacher üë®‚Äçüè´ in Ukrainian-American Concordia university. 
I‚Äôve completed language courses in Reading, UK üá¨üáß, Exeter, UK üá¨üáß and Toronto, Canada üá®üá¶ 
I have BBA and MBA, so I know something about business as well as economics üíµ 
I have worked as a farmer, a manager, a translator, a trainer, had my own company, but my real passion has always been teaching.

My big goal is to teach as many people as I can to make Ukraine an English speaking country'''

    if str(command).lower() in hi_eng:
        return "Hello there!"
    elif str(command).lower() in hi_ukr:
        return "–ü—Ä–∏–≤—ñ—Ç!"
    elif str(command).lower() in hi_ru:
        return '–ü—Ä–∏–≤–µ—Ç!'
    else:
        if lang == "eng":
            return "I'm sorry... I don't understand what you mean :("
        elif lang == "ukr":
            return "–í–∏–±–∞—á—Ç–µ... —è –Ω–µ —Ä–æ–∑—É–º—ñ—é —â–æ –≤–∏ –º–∞—î—Ç–µ –Ω–∞ —É–≤–∞–∑—ñ :("
        elif lang == "ru":
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ... —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤–≤–∏–¥—É :("
        else:
            return "I'm sorry... I don't understand what you mean :("


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)